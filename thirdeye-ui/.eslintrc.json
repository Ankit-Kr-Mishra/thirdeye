{
    "env": {
        "browser": true,
        "es2020": true,
        "node": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:jest/recommended",
        "plugin:jest/style",
        "plugin:jest-formatting/recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier",
        "prettier/react",
        "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": [
        "react",
        "react-hooks",
        "jest",
        "jest-formatting",
        "@typescript-eslint"
    ],
    "rules": {
        // ESLint rules

        // Require a whitespace at the beginning of a comment
        "spaced-comment": ["error", "always"],

        // Maximum line length for comments
        "max-len": [
            "error",
            {
                "code": 200,
                "comments": 100,
                "ignoreTrailingComments": true // Trailing comments allowed beyond maximum line length
            }
        ],

        // Require braces around blocks
        "curly": ["error", "all"],

        // Require parentheses around arrow function arguments
        "arrow-parens": ["error", "always"],

        // Require blank line before certain statements
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": "function"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "class"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "export"
            },
            {
                "blankLine": "any",
                "prev": "export",
                "next": "export"
            }, // Ignore consecutive export statements
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "break"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "continue"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "throw"
            }
        ],

        // eslint-plugin-react rules

        // Require props to be sorted
        "react/jsx-sort-props": [
            "error",
            {
                "callbacksLast": true,
                "shorthandFirst": true
            }
        ],

        // Require self closing tags in JSX/HTML
        "react/self-closing-comp": ["error"],

        // Require PascalCase for user-defined JSX components
        "react/jsx-pascal-case": ["error"],

        // eslint-plugin-react-hooks rules

        // Enforce rules of hooks
        "react-hooks/rules-of-hooks": "error",

        // eslint-plugin-jest rules

        // Prefer 'test' over 'it'
        "jest/consistent-test-it": [
            "error",
            {
                "fn": "test",
                "withinDescribe": "test"
            }
        ],

        // eslint-plugin-jest-formatting rules

        // Require blank line before certain statements (ESLint doesn't work for Jest)
        "jest-formatting/padding-around-all": 2,

        // @typescript-eslint rules

        // Require explicit return type on functions and class methods
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ]
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    }
}
