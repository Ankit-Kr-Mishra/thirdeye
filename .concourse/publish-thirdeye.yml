resource_types:
- name: slack
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: ci-src
  type: git
  icon: github
  source:
    uri: ((git-uri))
    private_key: ((ssh-private-key))
    branch: ((git-branch))

- name: thirdeye-docker-image
  type: docker-image
  source:
    repository: ((docker-registry))/thirdeye
    username: ((artifactory-username))
    password: ((artifactory-password))

- name: thirdeye-ui-docker-image
  type: docker-image
  source:
    repository: ((docker-registry))/thirdeye-ui
    username: ((artifactory-username))
    password: ((artifactory-password))

- name: src
  type: git
  icon: github
  source:
    uri: ((git-uri))
    branch: ((git-branch))
    private_key: ((ssh-private-key))
    ignore_paths:
    - thirdeye-ui
    - kubernetes/helm

- name: ui-src
  type: git
  icon: github
  source:
    uri: ((git-uri))
    branch: ((git-branch))
    private_key: ((ssh-private-key))
    paths:
    - pom.xml
    - thirdeye-ui

- name: chart-src
  type: git
  icon: github
  source:
    uri: ((git-uri))
    branch: ((git-branch))
    private_key: ((ssh-private-key))
    paths:
    - kubernetes/helm

- name: chart-version
  type: semver
  source:
    driver: git
    uri: ((git-uri))
    branch: versions-((git-branch))
    file: thirdeye-helm-version
    private_key: |
      ((ssh-private-key))

- name: chart-distrib
  type: azure-blobstore
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_account_key: ((azure-storage-access-key))
    container: ((chart-azure-storage-container))
    versioned_file: thirdeye-helm-chart-((git-branch)).tgz

- name: slack
  type: slack
  icon: slack
  source:
    url: ((slack-webhook-url))
jobs:
- name: build-thirdeye
  plan:
  - in_parallel:
    - get: ci-src
    - get: src
      trigger: true
  - task: build-thirdeye
    file: ci-src/.concourse/tasks/build-thirdeye/build-thirdeye.yml
  - put: thirdeye-docker-image
    params:
      build: src
      tag_file: version/version
      tag_as_latest: ((docker-tag-as-latest))
    get_params: 
      skip_download: true
  on_success:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        Branch ((git-branch)) of Thirdeye Server been successfully built.
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_failure:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        <!channel> Failed to build branch ((git-branch)) of Thirdeye Server
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-thirdeye-ui
  plan:
  - in_parallel:
    - get: ci-src
    - get: ui-src
      trigger: true
  - task: extract-thirdeye-version
    file: ci-src/.concourse/tasks/extract-maven-version/extract-maven-version.yml
    input_mapping:
      src: ui-src
    output_mapping:
      src: ui-src
  - task: build-thirdeye-ui
    file: ci-src/.concourse/tasks/build-thirdeye-ui/build-thirdeye-ui.yml
    input_mapping:
      src: ui-src
    output_mapping:
      src: ui-src
  - put: thirdeye-ui-docker-image
    params:
      build: ui-src/thirdeye-ui
      tag_file: version/version
      tag_as_latest: ((docker-tag-as-latest))
    get_params: 
      skip_download: true
  on_success:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        Branch ((git-branch)) of Thirdeye UI been successfully built.
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_failure:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        <!channel> Failed to build branch ((git-branch)) of Thirdeye UI
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: build-helm-chart
  plan:
  - get: ci-src
  - get: chart-version
    params:
      pre: build
  - put: chart-version
    params:
      file: chart-version/version
  - get: chart-src
    trigger: true
  - task: build-helm-chart
    file: ci-src/.concourse/tasks/build-helm-chart/build-helm-chart.yml
    input_mapping:
      version: chart-version
    params:
      CHART_DIR: thirdeye
  - put: chart-distrib
    params:
      file: build/*.tgz
  on_failure:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        <!channel> Failed to build ((helm-chart-name)) helm chart from ((git-branch)) branch.
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: publish-helm-chart
  plan:
  - get: ci-src
  - get: chart-version
    passed: ["build-helm-chart"]
  - get: chart-distrib
    trigger: true
    passed: ["build-helm-chart"]
  - task: publish-helm-chart
    file: ci-src/.concourse/tasks/publish-helm-chart/publish-helm-chart.yml
  on_failure:
    put: slack
    params:
      channel: ((slack-channel))
      text: |
        <!channel> Failed to publish Thirdeye helm chart from ((git-branch)) branch.
        ((concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME